#lang sicp

; Ex 1.19
; This was solved by applying the given transformation function twice
; (a <- bq + aq + ap) and (b <- bp + aq) and solving the resulting answers
; in terms of a and b. p prime works out to be p^2 + q^2 and q prime
; is q^2 + 2pq


(define (fib n)
  (fib-iter 1 0 0 1 n))

(define (fib-iter a b p q count)
  (cond ((= count 0) b)
        ((even? count)
         (fib-iter a
                   b
                   (+ (* p p) (* q q ))
                   (+ (* q q) (* 2 (* p q)))
                   (/ count 2)))
        (else (fib-iter (+ (* b q) (* a q) (* a p))
                        (+ (* b p) (* a q))
                        p
                        q
                        (- count 1)))))


> (fib 0)
0
> (fib 1)
1
> (fib 2)(fib 3)(fib 4)(fib 5)(fib 6)
1
2
3
5
8
> (fib 1000)
43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875
> 
