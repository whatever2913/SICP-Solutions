#lang sicp

; Ex 1.17
; Multiplication algorithm using just addition, halving, and doubling
; This is O(logn) in steps and space.

(define (double x) (+ x x))

(define (halve x) (/ x 2))

(define (* a b)
  (cond ((= 0 b) 0)
        ((even? b) (* (double a ) (halve b)))
        (else (+ a (* a (- b 1))))))


